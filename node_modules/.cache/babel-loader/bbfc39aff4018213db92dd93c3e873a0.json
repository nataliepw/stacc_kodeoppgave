{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Natalie/stacc_kodeoppgave/src/components/Create.js\",\n    _s2 = $RefreshSig$();\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle'; //import { Add } from 'material-ui-icons'\n\nimport { React, useState, Fragment, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Create() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [open, setOpen] = useState(false);\n  const [bAmount, setBAmount] = useState(0);\n  const [rate, setRate] = useState(0); //const [fee, setFee] = useState(0);\n\n  const [expDate, setExprDate] = useState(\"\");\n  const [balanceDate, setBalanceDate] = useState(\"\");\n  const [dateFirstPay, setDateFirstPay] = useState(\"\"); //const [unkValue, setUnkVal] = useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const options = {\n    method: 'POST',\n    url: 'https://visningsrom.stacc.com/dd_server_laaneberegning/rest/laaneberegning/v1/nedbetalingsplan',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    data: {\n      laanebelop: bAmount,\n      nominellRente: rate,\n      terminGebyr: 30,\n      utlopsDato: expDate,\n      saldoDato: balanceDate,\n      datoForsteInnbetaling: dateFirstPay,\n      ukjentVerdi: \"TERMINBELOP\"\n    }\n  };\n\n  function handleSubmit(e) {\n    _s();\n\n    const [nbp, setnbp] = useState([]);\n    handleClose();\n    event.preventDefault();\n    axios(options).then(response => {\n      const nbp = response.data;\n      console.log(response.data);\n      setnbp(nbp);\n      console.log(nbp);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    nbp.innbetalinger.map(plan => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: plan.dato\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 35\n    }, this));\n  }\n\n  _s(handleSubmit, \"M2HwpS3cNjzVYCkYP5POxLJPdJg=\");\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickOpen,\n      children: \"CREATE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create a new plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Please fill out the form below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"L\\xE5nebel\\xF8p\",\n          value: bAmount,\n          onChange: e => setBAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Rente\",\n          value: rate,\n          onChange: e => setRate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Utl\\xF8psdato\",\n          value: expDate,\n          onChange: e => setExprDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"SaldoDato\",\n          value: balanceDate,\n          onChange: e => setBalanceDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Dato f\\xF8rste innbetaling\",\n          value: dateFirstPay,\n          onChange: e => setDateFirstPay(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          color: \"primary\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Create, \"CLf+1tHKsKgOOriy5ZtDWkOX69E=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/Natalie/stacc_kodeoppgave/src/components/Create.js"],"names":["Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","React","useState","Fragment","useEffect","axios","Create","open","setOpen","bAmount","setBAmount","rate","setRate","expDate","setExprDate","balanceDate","setBalanceDate","dateFirstPay","setDateFirstPay","handleClickOpen","handleClose","options","method","url","headers","data","laanebelop","nominellRente","terminGebyr","utlopsDato","saldoDato","datoForsteInnbetaling","ukjentVerdi","handleSubmit","e","nbp","setnbp","event","preventDefault","then","response","console","log","catch","error","innbetalinger","map","plan","dato","target","value"],"mappings":"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","sourcesContent":["import Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n//import { Add } from 'material-ui-icons'\nimport {React, useState , Fragment, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction Create() {\n    const [open, setOpen] = useState(false);\n    const [bAmount, setBAmount] = useState(0);\n    const [rate, setRate] = useState(0);\n    //const [fee, setFee] = useState(0);\n    const [expDate, setExprDate] = useState(\"\");\n    const [balanceDate, setBalanceDate] = useState(\"\");\n    const [dateFirstPay, setDateFirstPay] = useState(\"\");\n    //const [unkValue, setUnkVal] = useState(\"\");\n    \n\n    const handleClickOpen = () => {\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const options = {\n        method: 'POST',\n        url: 'https://visningsrom.stacc.com/dd_server_laaneberegning/rest/laaneberegning/v1/nedbetalingsplan',\n        headers: { 'Content-type': 'application/json' },\n        data: {\n            laanebelop: bAmount,\n            nominellRente: rate,\n            terminGebyr: 30,\n            utlopsDato: expDate,\n            saldoDato: balanceDate,\n            datoForsteInnbetaling: dateFirstPay,\n            ukjentVerdi: \"TERMINBELOP\"\n\n        }\n    }\n\n   function handleSubmit(e) {\n        const [nbp,setnbp] = useState([])\n\n        handleClose();\n        event.preventDefault();\n\n        axios(options).then((response) => {\n            const nbp = response.data\n            console.log(response.data)\n            setnbp(nbp)\n            console.log(nbp)\n        }).catch(function (error) {\n            console.log(error);\n        });\n\n    nbp.innbetalinger.map(plan => <p>{plan.dato}</p>)\n}\n\n\n\n    return (\n        <Fragment>\n            <Button onClick={handleClickOpen} >\n                CREATE\n        </Button>\n            <Dialog open={open} >\n                <DialogTitle >Create a new plan</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please fill out the form below\n          </DialogContentText>\n                    <TextField\n                        label=\"Lånebeløp\"\n                        value={bAmount}\n                        onChange={e => setBAmount(e.target.value)}\n                    />\n                    <br />\n                    <TextField\n                        label=\"Rente\"\n                        value={rate}\n                        onChange={e => setRate(e.target.value)}\n                    />\n                    <br />\n                    <TextField\n                        label=\"Utløpsdato\"\n                        value={expDate}\n                        onChange={e => setExprDate(e.target.value)}\n                    />\n                    <br />\n                    <TextField\n                        label=\"SaldoDato\"\n                        value={balanceDate}\n                        onChange={e => setBalanceDate(e.target.value)}\n                    />\n                    <br />\n                    <TextField\n                        label=\"Dato første innbetaling\"\n                        value={dateFirstPay}\n                        onChange={e => setDateFirstPay(e.target.value)}\n\n                    />\n                    <br />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                        Create\n          </Button>\n                </DialogActions>\n            </Dialog>\n\n\n           {/*  <div>\n                {nbp && nbp.innbetalinger.map(plan =>\n                    <p>{plan.dato}</p>\n                    )}\n            </div> */}\n        </Fragment>\n    )\n}\nexport default Create;"]},"metadata":{},"sourceType":"module"}