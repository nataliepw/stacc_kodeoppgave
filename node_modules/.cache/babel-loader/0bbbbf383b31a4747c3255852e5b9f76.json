{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Natalie/stacc_kodeoppgave/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle'; //import { Add } from 'material-ui-icons'\n\nimport { React, useState, Fragment } from 'react';\nimport axios from 'axios';\nimport TablePayment from './TablePayment';\nimport NedBetalingsPlansListe from './nedbetalinsplanListe';\n\nfunction Form() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [bAmount, setBAmount] = useState(50000);\n  const [rate, setRate] = useState(0);\n  const [expDate, setExprDate] = useState(\"2021-05-05\");\n  const [balanceDate, setBalanceDate] = useState(\"2020-11-11\");\n  const [dateFirstPay, setDateFirstPay] = useState(\"2020-11-11\");\n  const [list, setList] = useState([]);\n  const [tableTitle, setTableTitle] = useState(\"\");\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  } //handle submit of POST request\n\n\n  function handleSubmit(e) {\n    handleClose();\n    e.preventDefault();\n    const options = {\n      method: 'POST',\n      url: 'https://visningsrom.stacc.com/dd_server_laaneberegning/rest/laaneberegning/v1/nedbetalingsplan',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      data: {\n        laanebelop: bAmount,\n        nominellRente: rate,\n        terminGebyr: 30,\n        utlopsDato: expDate,\n        saldoDato: balanceDate,\n        datoForsteInnbetaling: dateFirstPay,\n        ukjentVerdi: \"TERMINBELOP\"\n      }\n    }; //send the post request and log the response data\n\n    axios(options).then(response => {\n      console.log(response.data);\n      setList(list.concat([response.data.nedbetalingsplan.innbetalinger]));\n    }).catch(function (error) {\n      console.log(error);\n    });\n    /**\n     * []\n     * [plan1]\n     * [plan1] + [nyPlan] = [plan1, nyPlan]\n     * [plan1, nyPlan] + [nyPlan2] = [plan1, nyPlan, nyPlan2]\n     * ....\n     */\n\n    setTableTitle(\"\");\n  }\n\n  return (\n    /*#__PURE__*/\n    //Modal window by using material ui bootstrap\n    //returning a fragment because it takes care of multiple component.\n    //Chose the Dialog because it has the necessary property i need\n    _jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClickOpen,\n        children: \"Legg til nedbetalingsplan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Legg til ny plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Vennligs fyll ut skjemaet nedenfor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Tittel\",\n            defaultValue: tableTitle,\n            onChange: e => setTableTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"L\\xE5nebel\\xF8p\",\n            value: bAmount,\n            onChange: e => setBAmount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Rente\",\n            value: rate,\n            onChange: e => setRate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Utl\\xF8psdato\",\n            value: expDate,\n            onChange: e => setExprDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"SaldoDato\",\n            value: balanceDate,\n            onChange: e => setBalanceDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Dato f\\xF8rste innbetaling\",\n            value: dateFirstPay,\n            onChange: e => setDateFirstPay(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmit,\n            color: \"primary\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NedBetalingsPlansListe, {\n        list: list,\n        tableTitle: tableTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Form, \"oKgMUUpghTHAWD3vM7kIY9VZfDY=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/Natalie/stacc_kodeoppgave/src/components/Form.js"],"names":["Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","React","useState","Fragment","axios","TablePayment","NedBetalingsPlansListe","Form","open","setOpen","bAmount","setBAmount","rate","setRate","expDate","setExprDate","balanceDate","setBalanceDate","dateFirstPay","setDateFirstPay","list","setList","tableTitle","setTableTitle","handleClickOpen","handleClose","handleSubmit","e","preventDefault","options","method","url","headers","data","laanebelop","nominellRente","terminGebyr","utlopsDato","saldoDato","datoForsteInnbetaling","ukjentVerdi","then","response","console","log","concat","nedbetalingsplan","innbetalinger","catch","error","target","value"],"mappings":"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","sourcesContent":["import Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n//import { Add } from 'material-ui-icons'\nimport { React, useState, Fragment } from 'react';\nimport axios from 'axios';\nimport TablePayment from './TablePayment';\nimport NedBetalingsPlansListe from './nedbetalinsplanListe';\n\nfunction Form() {\n    const [open, setOpen] = useState(false);\n    const [bAmount, setBAmount] = useState(50000);\n    const [rate, setRate] = useState(0);\n    const [expDate, setExprDate] = useState(\"2021-05-05\");\n    const [balanceDate, setBalanceDate] = useState(\"2020-11-11\");\n    const [dateFirstPay, setDateFirstPay] = useState(\"2020-11-11\");\n    const [list, setList] = useState([])\n    const [tableTitle, setTableTitle] = useState(\"\")\n\n\n    function handleClickOpen() {\n        setOpen(true)\n    }\n\n    function handleClose() {\n        setOpen(false)\n    }\n\n\n    //handle submit of POST request\n    function handleSubmit(e) {\n        handleClose()\n        e.preventDefault()\n\n        const options = {\n            method: 'POST',\n            url: 'https://visningsrom.stacc.com/dd_server_laaneberegning/rest/laaneberegning/v1/nedbetalingsplan',\n            headers: { 'Content-type': 'application/json' },\n            data: {\n                laanebelop: bAmount,\n                nominellRente: rate,\n                terminGebyr: 30,\n                utlopsDato: expDate,\n                saldoDato: balanceDate,\n                datoForsteInnbetaling: dateFirstPay,\n                ukjentVerdi: \"TERMINBELOP\"\n\n            }\n        }\n\n        //send the post request and log the response data\n        axios(options).then((response) => {\n            console.log(response.data)\n            setList(list.concat([response.data.nedbetalingsplan.innbetalinger]))\n        }).catch(function (error) {\n            console.log(error)\n        });\n\n        /**\n         * []\n         * [plan1]\n         * [plan1] + [nyPlan] = [plan1, nyPlan]\n         * [plan1, nyPlan] + [nyPlan2] = [plan1, nyPlan, nyPlan2]\n         * ....\n         */\n\n        setTableTitle(\"\")\n    }\n\n    return (\n        //Modal window by using material ui bootstrap\n        //returning a fragment because it takes care of multiple component.\n        //Chose the Dialog because it has the necessary property i need\n        <Fragment>\n            <Button onClick={handleClickOpen}>\n                Legg til nedbetalingsplan\n             </Button>\n            <Dialog open={open} >\n                <DialogTitle >Legg til ny plan</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                       Vennligs fyll ut skjemaet nedenfor\n          </DialogContentText>\n                    <TextField\n                        label=\"Tittel\"\n                        defaultValue={tableTitle}\n                        onChange={e => setTableTitle(e.target.value)}\n                    />\n                    <br />\n                    <TextField\n                        label=\"Lånebeløp\"\n                        value={bAmount}\n                        onChange={e => setBAmount(e.target.value)}\n                    />\n                    <br />\n                    <TextField\n                        label=\"Rente\"\n                        value={rate}\n                        onChange={e => setRate(e.target.value)}\n                    />\n                    <br />\n                    <TextField\n                        label=\"Utløpsdato\"\n                        value={expDate}\n                        onChange={e => setExprDate(e.target.value)}\n                    />\n                    <br />\n                    <TextField\n                        label=\"SaldoDato\"\n                        value={balanceDate}\n                        onChange={e => setBalanceDate(e.target.value)}\n                    />\n                    <br />\n                    <TextField\n                        label=\"Dato første innbetaling\"\n                        value={dateFirstPay}\n                        onChange={e => setDateFirstPay(e.target.value)}\n\n                    />\n                    <br />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                        Create\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <NedBetalingsPlansListe list={list} tableTitle={tableTitle} />\n        </Fragment>\n\n\n\n    )\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}